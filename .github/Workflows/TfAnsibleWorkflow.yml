name: Terraform workflow

on: [push, workflow_dispatch]

jobs:
  apply:
    name: Terraform apply
    runs-on: ubuntu-latest #runner
    if: github.event_name == 'push'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-central-1

      #- name: Change Directory
      #  run: cd terraform

      - name: Terraform Init
        woking-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        woking-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Ansible installieren
        run: apt-get install -y ansible  

      - name: Generiere Ansible Inventory
        woking-directory: ../ansible
        run: 
            echo "[webserver]" > ec2Maschinen.ini
            terraform output -json >> meineOutput.json
            jq -r '.webserver.public_ip' meineOutput.json >> ../ansible/ec2Maschinen.ini

      - name: Copy SSH Key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/NewKp.pem
            chmod 600 ~/.ssh/NewKp.pem
    
        - name: Ansible Playbook ausf√ºhren
        working-directory: ./ansible
        run: ansible-playbook -i ec2Maschinen.ini meinPlaybook.yml     

  destroy:
    name: Terraform destroy
    runs-on: ubuntu-latest #runner
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve